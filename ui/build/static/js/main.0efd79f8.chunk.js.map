{"version":3,"sources":["components/ScrollToTop.jsx","components/LoginForm.jsx","components/FormErrorMessage.jsx","components/store/DataSource.js","components/store/actionTypes.js","components/store/graphQLQueries.js","components/store/graphQLMutations.js","components/store/actionCreator.js","components/withLogin.jsx","components/helpers/yup/index.js","components/helpers/yup/LoginSchema.js","components/LoginModalBody.jsx","components/RegisterForm.jsx","components/withRegister.jsx","components/helpers/yup/RegisterSchema.js","components/RegisterModalBody.jsx","components/withModal.jsx","components/UserModal.jsx","components/MainNavbar.jsx","components/DemoAlert.jsx","components/ListControlFilter.jsx","components/ListControlSort.jsx","components/ListControl.jsx","components/PetCard.jsx","components/Pagination.jsx","components/NoDataFound.jsx","components/withSearchToVariables.jsx","components/Home.jsx","components/PetDetails.jsx","components/Contact.jsx","components/Footer.jsx","components/user/DashboardNav.jsx","components/user/UserPetList.jsx","components/user/UserBasicSetting.jsx","components/helpers/yup/ChangePasswordSchema.js","components/user/UserPasswordSetting.jsx","components/user/UserSetting.jsx","components/user/PetFormImageInput.jsx","components/user/PetForm.jsx","components/user/UserSwitch.jsx","components/Login.jsx","components/Register.jsx","App.jsx","components/store/initialState.js","components/store/reducer.js","components/store/store.js","index.jsx"],"names":["ScrollToTop","prevProps","prevPathname","location","pathname","this","props","window","scrollTo","React","Component","withRouter","LoginForm","handleSubmit","touched","errors","className","Form","noValidate","onSubmit","Group","controlId","Label","name","field","Control","isInvalid","username","autoFocus","Feedback","type","password","Button","variant","FormErrorMessage","message","Alert","process","NODE_ENV","REACT_APP_API_ENDPOINT","axios","defaults","withCredentials","API_ENDPOINT","GRAPHQL_ENDPOINT","DataSource","errHandler","query","a","variables","options","sendRequest","response","data","error","Error","endPoint","console","undefined","method","url","request","actionTypes","PET_LIST","PET_DETAILS","PET_CREATE","PET_UPDATE","PET_DELETE","USER_PET_LIST","USER_INFO_UPDATE","USER_CHANGE_PASSWORD","SET_AUTHENTICATE","queries","mutations","dataSource","actionCreator","getPetList","payload","graphQLFetch","getPetDetails","_id","getUserPetList","userInfoUpdate","deletePet","petDelete","setAuthenticate","status","user","mapDispatchToProps","WrappedComponent","connect","handleFormSubmit","values","modal","handleClose","history","toggleError","postData","result","success","push","show","done","setState","state","withLogin","yup","ref","test","exclusive","params","reference","path","value","resolve","LoginSchema","object","shape","string","required","isDemo","REACT_APP_IS_DEMO","initialValues","Modal","Body","validationSchema","Footer","href","onClick","event","changePage","preventDefault","RegisterForm","email","passwordRepeat","withRegister","RegisterSchema","equalTo","UserModal","handleModalShow","page","handleShow","toggleMenu","isOpen","onHide","centered","Header","Title","icon","withModal","mapDispathToProps","MainNavbar","document","body","classList","add","remove","handleLogout","getData","createLinks","links","map","label","key","pagesLinks","to","isAuthenticated","Container","DemoAlert","Row","Col","breeds","ages","genders","coatLengths","preferHomes","healths","breed","gender","age","coatLength","preferHomeWith","preferHomeWithout","health","createFilterSelectOptions","createCheckbox","fieldName","selectedValues","d","Check","id","checked","includes","ListControlFilter","breedOptions","ageOptions","genderOptions","coatLengthOptions","handleFormReset","handleReset","Dropdown","Toggle","Menu","applyControl","onReset","xs","md","as","lg","sortKeys","ListControlSort","currentValue","sort","handleChange","target","sortOptions","onChange","initialState","ListControl","baseUrl","changes","controls","URLSearchParams","Object","keys","forEach","isArray","Array","length","arrayValue","append","set","search","toString","newButton","PetCard","pet","images","handleDelete","controlOverlay","linkUrl","controlTooltip","text","Tooltip","Card","Img","src","Text","OverlayTrigger","placement","overlay","ownProps","petList","pages","userPetList","isFirstPage","isLastPage","handleChangePage","nextPage","disabled","NoDataFound","controlKeys","dataType","withSearchToVariables","parseSearch","getAll","get","filter","paramsToVariables","Home","loadData","match","Number","prevVars","prevPage","currentVars","currentPage","docs","petItems","sm","createDataSections","sectionName","cssModifier","arrayToCommaString","array","join","PetDetails","petDetails","petName","description","author","phone","address","carouselItems","image","index","Carousel","Item","alt","filename","contactData","aboutDataSections","contactDataSections","interval","subject","formModel","Contact","alert","formFields","Nav","Link","eventKey","UserPetList","petArray","UserBasicSetting","handleBasicInfoToggle","basicInfoMode","userData","ChangePasswordSchema","oldPassword","newPassword","newPasswordRepeat","initialValue","UserPasswordSetting","oldPasswordRepeat","resetForm","PetFormImageInput","handleAdd","files","setFieldValue","form","FormData","i","file","concat","log","fileInputRef","current","deleteData","filteredImages","img","createImages","createRef","htmlFor","multiple","createRadioOptions","groupLabel","radios","defaultChecked","createCheckboxOptions","activeValues","checkboxes","PetForm","mode","petData","vars","handleCancel","formikKey","item","UserSwitch","component","UserSetting","exact","from","library","faPhone","faMapMarkerAlt","faBars","faTimes","faFilter","faSortAlphaDown","faChevronLeft","faChevronRight","faPlus","faEdit","faTrash","faCog","faCamera","faEnvelope","App","Login","Register","total","reducer","produce","draft","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","promiseMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0efd79f8.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    const {\n      location: { pathname: prevPathname },\n    } = prevProps;\n    const {\n      location: { pathname: currentPathname },\n    } = this.props;\n\n    if (currentPathname !== prevPathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Field } from 'formik';\n\nfunction LoginForm({ handleSubmit, touched, errors, className }) {\n  return (\n    <Form noValidate onSubmit={handleSubmit} className={className}>\n      <Form.Group controlId=\"username\">\n        <Form.Label>Username</Form.Label>\n        <Field name=\"username\">\n          {({ field }) => (\n            <Form.Control\n              {...field}\n              isInvalid={touched.username && errors.username}\n              autoFocus\n            />\n          )}\n        </Field>\n\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.username}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"password\">\n        <Form.Label>Password</Form.Label>\n        <Field name=\"password\">\n          {({ field }) => (\n            <Form.Control\n              {...field}\n              type=\"password\"\n              isInvalid={touched.password && errors.password}\n            />\n          )}\n        </Field>\n\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.password}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Button type=\"submit\" variant=\"primary\" className={`${className}-submit`}>\n        Login\n      </Button>\n    </Form>\n  );\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nexport default function FormErrorMessage({ message }) {\n  return (\n    <Alert variant=\"danger\" className=\"form-error-message\">\n      {message}\n    </Alert>\n  );\n}\n","import axios from 'axios';\n\nconst { NODE_ENV, REACT_APP_API_ENDPOINT } = process.env;\n\n// Axios global defaults.\nif (NODE_ENV === 'development') {\n  axios.defaults.withCredentials = true;\n}\n\nconst API_ENDPOINT = REACT_APP_API_ENDPOINT || '';\nconst GRAPHQL_ENDPOINT = `${API_ENDPOINT}/graphql`;\n\nclass DataSource {\n  constructor(errHandler) {\n    /* This error handler constructor is pretty much useless right now.\n    I'll probably use it for a more proper error handling on later\n    development. */\n    this.errHandler = errHandler || (() => {});\n  }\n\n  async graphQLFetch(query, variables = {}, options = {}) {\n    const response = await this.sendRequest('POST', GRAPHQL_ENDPOINT, {\n      query,\n      variables,\n      options,\n    });\n    // Based on Axios response object schema.\n    const { data } = response;\n    if (data.errors && data.data === null) {\n      const error = data.errors[0];\n      throw new Error(error.message);\n    }\n\n    return data.data;\n  }\n\n  async getData(endPoint, options = {}) {\n    try {\n      const response = await this.sendRequest(\n        'GET',\n        `${API_ENDPOINT}${endPoint}`,\n        {},\n        options,\n      );\n      return response.data;\n    } catch (error) {\n      console.error('getData error:', error.message);\n    }\n\n    return undefined;\n  }\n\n  async postData(endPoint, data, options = {}) {\n    try {\n      const response = await this.sendRequest(\n        'POST',\n        `${API_ENDPOINT}${endPoint}`,\n        data,\n        options,\n      );\n      return response.data;\n    } catch (error) {\n      console.error('postData error:', error.message);\n    }\n\n    return undefined;\n  }\n\n  async deleteData(endPoint, data) {\n    try {\n      const response = await this.sendRequest(\n        'DELETE',\n        `${API_ENDPOINT}${endPoint}`,\n        data,\n      );\n      return response.data;\n    } catch (error) {\n      console.error('deleteData error: ', error.message);\n    }\n\n    return undefined;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  sendRequest(method, url, data, options = {}) {\n    return axios.request({ method, url, data, ...options });\n  }\n}\n\nexport { API_ENDPOINT, GRAPHQL_ENDPOINT };\nexport default DataSource;\n","const actionTypes = {\n  PET_LIST: 'pet_list',\n  PET_DETAILS: 'pet_details',\n  PET_CREATE: 'pet_create',\n  PET_UPDATE: 'pet_update',\n  PET_DELETE: 'pet_delete',\n  USER_PET_LIST: 'user_pet_list',\n  USER_INFO_UPDATE: 'user_info_update',\n  USER_CHANGE_PASSWORD: 'user_change_password',\n  SET_AUTHENTICATE: 'set_authenticate',\n};\n\nexport default actionTypes;\n","import actionTypes from './actionTypes';\n\nconst queries = {\n  [actionTypes.PET_LIST]: `\n    query petList(\n      $breed: String\n      $age: String\n      $gender: String\n      $coatLength: String\n      $preferHomeWith: [String]\n      $preferHomeWithout: [String]\n      $health: [String]\n      $sort: String\n      $page: Int\n    ) {\n      petList(\n        breed: $breed\n        age: $age\n        gender: $gender\n        coatLength: $coatLength\n        preferHomeWith: $preferHomeWith\n        preferHomeWithout: $preferHomeWithout\n        health: $health\n        sort: $sort\n        page: $page\n      ) {\n        page\n        pages\n        total\n        docs {\n          _id\n          name\n          breed\n          images {\n            path\n          }\n        }\n      }\n    }\n  `,\n  [actionTypes.PET_DETAILS]: `\n    query pet($_id: ID!) {\n      pet(_id: $_id) {\n        name\n        breed\n        gender\n        age\n        coatLength\n        preferHomeWith\n        preferHomeWithout\n        health\n        description\n        images {\n          path\n          filename\n        }\n        author {\n          email\n          phone\n          address\n        }\n      }\n    }\n  `,\n  [actionTypes.USER_PET_LIST]: `\n    query userPetList(\n      $breed: String\n      $age: String\n      $gender: String\n      $coatLength: String\n      $preferHomeWith: [String]\n      $preferHomeWithout: [String]\n      $health: [String]\n      $sort: String\n      $page: Int\n    ) {\n      userPetList(\n        breed: $breed\n        age: $age\n        gender: $gender\n        coatLength: $coatLength\n        preferHomeWith: $preferHomeWith\n        preferHomeWithout: $preferHomeWithout\n        health: $health\n        sort: $sort\n        page: $page\n      ) {\n        page\n        pages\n        total\n        docs {\n          _id\n          name\n          breed\n          images {\n            path\n          }\n        }\n      }\n    }\n  `,\n};\n\nexport default queries;\n","import actionTypes from './actionTypes';\n\nconst mutations = {\n  [actionTypes.PET_CREATE]: `\n    mutation petCreate($pet: PetInput!) {\n      petCreate(pet: $pet) {\n        _id\n      }\n    }\n  `,\n  [actionTypes.PET_UPDATE]: `\n    mutation petUpdate($_id: ID!, $changes: PetUpdateInput!) {\n      petUpdate(_id: $_id, changes: $changes) {\n        _id\n      }\n    }\n  `,\n  [actionTypes.PET_DELETE]: `\n    mutation petDelete($_id: ID!) {\n      petDelete(_id: $_id)\n    }\n  `,\n  [actionTypes.USER_INFO_UPDATE]: `\n    mutation userInfoUpdate($changes: UserInfoUpdateInput!) {\n      userInfoUpdate(changes: $changes) {\n        username\n        name\n        email\n        phone\n        address\n      }\n    }\n  `,\n  [actionTypes.USER_CHANGE_PASSWORD]: `\n    mutation userChangePassword($oldPassword: String!, $newPassword: String!) {\n      userChangePassword(oldPassword: $oldPassword, newPassword: $newPassword)\n    }\n  `,\n};\n\nexport default mutations;\n","import actionTypes from './actionTypes';\nimport DataSource from './DataSource';\nimport queries from './graphQLQueries';\nimport mutations from './graphQLMutations';\n\nconst dataSource = new DataSource();\n\nconst actionCreator = {\n  getPetList: (variables) => ({\n    type: actionTypes.PET_LIST,\n    payload: dataSource.graphQLFetch(queries[actionTypes.PET_LIST], variables),\n  }),\n  getPetDetails: (_id) => ({\n    type: actionTypes.PET_DETAILS,\n    payload: dataSource.graphQLFetch(queries[actionTypes.PET_DETAILS], { _id }),\n  }),\n  getUserPetList: (variables) => ({\n    type: actionTypes.USER_PET_LIST,\n    payload: dataSource.graphQLFetch(\n      queries[actionTypes.USER_PET_LIST],\n      variables,\n    ),\n  }),\n  userInfoUpdate: (variables) => ({\n    type: actionTypes.USER_INFO_UPDATE,\n    payload: dataSource.graphQLFetch(\n      mutations[actionTypes.USER_INFO_UPDATE],\n      variables,\n    ),\n  }),\n  deletePet: async (_id) => {\n    const data = await dataSource.graphQLFetch(\n      mutations[actionTypes.PET_DELETE],\n      { _id },\n    );\n    return {\n      type: actionTypes.PET_DELETE,\n      payload: {\n        _id,\n        data: data.petDelete,\n      },\n    };\n  },\n  setAuthenticate: (status, user) => ({\n    type: actionTypes.SET_AUTHENTICATE,\n    payload: {\n      status,\n      user,\n    },\n  }),\n};\n\nexport default actionCreator;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport DataSource from './store/DataSource';\nimport actionCreator from './store/actionCreator';\n\nconst dataSource = new DataSource();\n\nconst mapDispatchToProps = {\n  setAuthenticate: actionCreator.setAuthenticate,\n};\n\nfunction withLogin(WrappedComponent) {\n  return class withLoginHOC extends Component {\n    constructor() {\n      super();\n      this.state = {\n        error: {\n          show: false,\n          message: '',\n        },\n      };\n    }\n\n    handleFormSubmit = (values) => {\n      const { setAuthenticate, modal, handleClose, history } = this.props;\n\n      this.toggleError(false, '', async () => {\n        const result = await dataSource.postData('/user/login', values);\n        // If it's failed (incorrect username or password).\n        if (!result.success) {\n          this.toggleError(true, result.message);\n          return undefined;\n        }\n\n        setAuthenticate(true, result.user);\n        // Close modal.\n        if (modal && handleClose) handleClose();\n        history.push('/user');\n\n        return undefined;\n      });\n    };\n\n    toggleError = (show, message = '', done) => {\n      this.setState(\n        {\n          error: {\n            show,\n            message,\n          },\n        },\n        done,\n      );\n    };\n\n    render() {\n      const { error } = this.state;\n\n      return (\n        <WrappedComponent\n          {...this.props}\n          handleFormSubmit={this.handleFormSubmit}\n          error={error}\n        />\n      );\n    }\n  };\n}\n\nexport default (WrappedComponent) =>\n  connect(null, mapDispatchToProps)(withRouter(withLogin(WrappedComponent)));\n","/* eslint-disable no-undef */\nimport * as yup from 'yup';\n\nfunction equalTo(ref, message) {\n  return this.test({\n    name: 'equalTo',\n    exclusive: false,\n    message,\n    params: {\n      reference: ref.path,\n    },\n    test(value) {\n      return value === this.resolve(ref);\n    },\n  });\n}\n\nyup.addMethod(yup.string, 'equalTo', equalTo);\n\nexport default yup;\n","import yup from './index';\n\nconst LoginSchema = yup.object().shape({\n  username: yup.string().required('Required'),\n  password: yup.string().required('Required'),\n});\n\nexport default LoginSchema;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { Modal } from 'react-bootstrap';\n\nimport LoginForm from './LoginForm';\nimport FormErrorMessage from './FormErrorMessage';\nimport withLogin from './withLogin';\nimport LoginSchema from './helpers/yup/LoginSchema';\n\nconst { REACT_APP_IS_DEMO } = process.env;\nconst isDemo = REACT_APP_IS_DEMO === 'true';\n\nconst initialValues = {\n  username: '',\n  password: '',\n};\n\nfunction LoginModalBody(props) {\n  const {\n    error: { show, message },\n    handleFormSubmit,\n  } = props;\n\n  const handleChangePage = (event) => {\n    const { changePage } = props;\n\n    event.preventDefault();\n    changePage('register');\n  };\n\n  return (\n    <>\n      {show && <FormErrorMessage message={message} />}\n\n      <Modal.Body className=\"navbar__modal-body\">\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleFormSubmit}\n          validationSchema={LoginSchema}\n        >\n          {({ handleSubmit, touched, errors }) => (\n            <LoginForm\n              handleSubmit={handleSubmit}\n              touched={touched}\n              errors={errors}\n              className=\"navbar__modal-form\"\n            />\n          )}\n        </Formik>\n      </Modal.Body>\n\n      {/* Disabled register for demo build. */}\n      {!isDemo && (\n        <Modal.Footer className=\"navbar__modal-footer\">\n          <p>\n            Don&apos;t have an account?{' '}\n            <a href=\"#\" className=\"text-primary\" onClick={handleChangePage}>\n              Register.\n            </a>\n          </p>\n        </Modal.Footer>\n      )}\n    </>\n  );\n}\n\nexport default withLogin(LoginModalBody);\n","import React from 'react';\nimport { Field } from 'formik';\nimport { Form, Button } from 'react-bootstrap';\n\nfunction RegisterForm({ handleSubmit, touched, errors, className }) {\n  return (\n    <Form noValidate onSubmit={handleSubmit} className={className}>\n      <Form.Group controlId=\"name\">\n        <Form.Label>Full Name</Form.Label>\n        <Field name=\"name\">\n          {({ field }) => (\n            <Form.Control\n              {...field}\n              isInvalid={touched.name && errors.name}\n              autoFocus\n            />\n          )}\n        </Field>\n\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.name}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"username\">\n        <Form.Label>Username</Form.Label>\n        <Field name=\"username\">\n          {({ field }) => (\n            <Form.Control\n              {...field}\n              isInvalid={touched.username && errors.username}\n            />\n          )}\n        </Field>\n\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.username}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"email\">\n        <Form.Label>Email</Form.Label>\n        <Field name=\"email\">\n          {({ field }) => (\n            <Form.Control\n              {...field}\n              type=\"email\"\n              isInvalid={touched.email && errors.email}\n            />\n          )}\n        </Field>\n\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.email}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"password\">\n        <Form.Label>Password</Form.Label>\n        <Field name=\"password\">\n          {({ field }) => (\n            <Form.Control\n              {...field}\n              type=\"password\"\n              isInvalid={touched.password && errors.password}\n            />\n          )}\n        </Field>\n\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.password}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"password-repeat\">\n        <Form.Label>Repeat password</Form.Label>\n        <Field name=\"passwordRepeat\">\n          {({ field }) => (\n            <Form.Control\n              {...field}\n              type=\"password\"\n              isInvalid={touched.passwordRepeat && errors.passwordRepeat}\n            />\n          )}\n        </Field>\n\n        <Form.Control.Feedback type=\"invalid\">\n          {errors.passwordRepeat}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Button type=\"submit\" variant=\"primary\" className={`${className}-submit`}>\n        Register\n      </Button>\n    </Form>\n  );\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport DataSource from './store/DataSource';\nimport actionCreator from './store/actionCreator';\n\nconst dataSource = new DataSource();\n\nconst mapDispatchToProps = {\n  setAuthenticate: actionCreator.setAuthenticate,\n};\n\nfunction withRegister(WrappedComponent) {\n  return class withRegisterHOC extends Component {\n    constructor() {\n      super();\n      this.state = {\n        error: {\n          show: false,\n          message: '',\n        },\n      };\n    }\n\n    handleFormSubmit = (values) => {\n      const { setAuthenticate, modal, handleClose, history } = this.props;\n\n      this.toggleError(false, '', async () => {\n        // We don't need passwordrepeat.\n        const { passwordRepeat, ...user } = values;\n        const result = await dataSource.postData('/user/register', { user });\n        // If it's failed (unique data clash).\n        if (!result.success) {\n          this.toggleError(true, result.message);\n          return undefined;\n        }\n\n        setAuthenticate(true, result.user);\n        // Close modal.\n        if (modal && handleClose) handleClose();\n        history.push('/user');\n\n        return undefined;\n      });\n    };\n\n    toggleError = (show, message = '', done) => {\n      this.setState(\n        {\n          error: {\n            show,\n            message,\n          },\n        },\n        done,\n      );\n    };\n\n    render() {\n      const { error } = this.state;\n\n      return (\n        <WrappedComponent\n          {...this.props}\n          handleFormSubmit={this.handleFormSubmit}\n          error={error}\n        />\n      );\n    }\n  };\n}\n\nexport default (WrappedComponent) =>\n  connect(null, mapDispatchToProps)(withRouter(withRegister(WrappedComponent)));\n","import yup from './index';\n\nconst RegisterSchema = yup.object().shape({\n  name: yup.string().required('Required'),\n  username: yup.string().required('Required'),\n  email: yup.string().email('Invalid email').required('Required'),\n  password: yup.string().required('Required'),\n  passwordRepeat: yup\n    .string()\n    .required('Required')\n    .equalTo(yup.ref('password'), 'Password does not match'),\n});\n\nexport default RegisterSchema;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { Modal } from 'react-bootstrap';\n\nimport RegisterForm from './RegisterForm';\nimport FormErrorMessage from './FormErrorMessage';\nimport withRegister from './withRegister';\nimport RegisterSchema from './helpers/yup/RegisterSchema';\n\nconst initialValues = {\n  name: '',\n  username: '',\n  email: '',\n  password: '',\n  passwordRepeat: '',\n};\n\nfunction RegisterModalBody(props) {\n  const {\n    error: { show, message },\n    handleFormSubmit,\n  } = props;\n\n  const handleChangePage = (event) => {\n    const { changePage } = props;\n\n    event.preventDefault();\n    changePage('login');\n  };\n\n  return (\n    <>\n      <Modal.Body className=\"navbar__modal-body\">\n        {show && <FormErrorMessage message={message} />}\n\n        <Formik\n          initialValues={initialValues}\n          validationSchema={RegisterSchema}\n          onSubmit={handleFormSubmit}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <RegisterForm\n              handleSubmit={handleSubmit}\n              errors={errors}\n              touched={touched}\n              className=\"navbar__modal-form\"\n            />\n          )}\n        </Formik>\n      </Modal.Body>\n\n      <Modal.Footer className=\"navbar__modal-footer\">\n        <p>\n          Already have an account?{' '}\n          <a href=\"#\" className=\"text-primary\" onClick={handleChangePage}>\n            Login.\n          </a>\n        </p>\n      </Modal.Footer>\n    </>\n  );\n}\n\nexport default withRegister(RegisterModalBody);\n","import React, { Component } from 'react';\n\nexport default function withModal(WrappedComponent) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        isOpen: false,\n      };\n    }\n\n    handleShow = () => {\n      this.setState({ isOpen: true });\n    };\n\n    handleClose = () => {\n      this.setState({ isOpen: false });\n    };\n\n    render() {\n      const { isOpen } = this.state;\n\n      return (\n        <WrappedComponent\n          {...this.props}\n          isOpen={isOpen}\n          handleShow={this.handleShow}\n          handleClose={this.handleClose}\n        />\n      );\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport LoginModalBody from './LoginModalBody';\nimport RegisterModalBody from './RegisterModalBody';\nimport withModal from './withModal';\n\nconst { REACT_APP_IS_DEMO } = process.env;\nconst isDemo = REACT_APP_IS_DEMO === 'true';\n\nclass UserModal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      page: 'login',\n    };\n  }\n\n  handleModalShow = (page) => {\n    const { handleShow, toggleMenu } = this.props;\n\n    this.setState({ page });\n    // Close menu.\n    toggleMenu(false);\n    // SHow modal.\n    handleShow();\n  };\n\n  changePage = (page) => {\n    this.setState({ page });\n  };\n\n  render() {\n    const { page } = this.state;\n    const { isOpen, handleClose } = this.props;\n\n    return (\n      <div className=\"navbar__menu-user-no-authed\">\n        <button\n          type=\"button\"\n          className=\"navbar__menu-item navbar__menu-button\"\n          onClick={() => this.handleModalShow('login')}\n        >\n          Login\n        </button>\n\n        {/* Disable register for demo build. */}\n        {!isDemo && (\n          <button\n            type=\"button\"\n            className=\"navbar__menu-item navbar__menu-button\"\n            onClick={() => this.handleModalShow('register')}\n          >\n            Register\n          </button>\n        )}\n\n        <Modal\n          show={isOpen}\n          onHide={handleClose}\n          centered\n          className={`navbar__modal navbar__modal--${page}`}\n        >\n          <Modal.Header className=\"navbar__modal-header\">\n            <h1 className=\"navbar__modal-logo\">PetTake</h1>\n            <Modal.Title className=\"navbar__modal-title\">\n              {page === 'login' ? 'Welcome Back!' : 'Create Account'}\n            </Modal.Title>\n            <button\n              type=\"button\"\n              className=\"navbar__modal-close\"\n              onClick={handleClose}\n            >\n              <FontAwesomeIcon icon=\"times\" />\n            </button>\n          </Modal.Header>\n\n          {page === 'login' && (\n            <LoginModalBody\n              modal\n              changePage={this.changePage}\n              handleClose={handleClose}\n            />\n          )}\n          {page === 'register' && (\n            <RegisterModalBody\n              modal\n              changePage={this.changePage}\n              handleClose={handleClose}\n            />\n          )}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withModal(UserModal);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { NavLink, Link, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\n\nimport UserModal from './UserModal';\nimport DataSource from './store/DataSource';\nimport actionCreator from './store/actionCreator';\n\nconst dataSource = new DataSource();\n\nconst mapStateToProps = ({ isAuthenticated }) => ({\n  isAuthenticated,\n});\nconst mapDispathToProps = {\n  setAuthenticate: actionCreator.setAuthenticate,\n};\n\nclass MainNavbar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n    };\n    this.pagesLinks = [\n      {\n        label: 'Home',\n        props: {\n          to: '/home',\n          className: 'navbar__menu-item navbar__menu-link',\n        },\n      },\n      {\n        label: 'Contact',\n        props: {\n          to: '/contact',\n          className: 'navbar__menu-item navbar__menu-link',\n        },\n      },\n    ];\n  }\n\n  toggleMenu = (state) => {\n    this.setState({ isOpen: state });\n\n    if (state === true) {\n      document.body.classList.add('disable-scroll');\n    } else {\n      document.body.classList.remove('disable-scroll');\n    }\n  };\n\n  handleLogout = async () => {\n    const { setAuthenticate, history } = this.props;\n\n    const result = await dataSource.getData('/user/logout');\n\n    if (result.success) {\n      this.toggleMenu(false);\n      setAuthenticate(false);\n      history.push('/home');\n    }\n  };\n\n  createLinks = (links) =>\n    links.map(({ label, props }) => (\n      <NavLink {...props} key={label} onClick={() => this.toggleMenu(false)}>\n        {label}\n      </NavLink>\n    ));\n\n  render() {\n    const { isOpen } = this.state;\n    const { isAuthenticated } = this.props;\n    const pagesLinks = this.createLinks(this.pagesLinks);\n\n    return (\n      <>\n        <div\n          className={`overlay ${isOpen ? 'show' : ''}`}\n          onClick={() => this.toggleMenu(false)}\n        />\n\n        <header className=\"page-header\">\n          <nav className=\"navbar\">\n            <Container>\n              <Link to=\"/\" className=\"navbar__brand\">\n                PetTake\n              </Link>\n\n              <button\n                type=\"button\"\n                className=\"navbar__toggle\"\n                onClick={() => this.toggleMenu(true)}\n              >\n                <FontAwesomeIcon icon=\"bars\" />\n              </button>\n\n              <section className={`navbar__menu ${isOpen ? 'open' : ''}`}>\n                <header className=\"navbar__menu-header\">\n                  <h1 className=\"navbar__menu-title\">Menu</h1>\n                  <button\n                    type=\"button\"\n                    className=\"navbar__menu-close-btn\"\n                    onClick={() => this.toggleMenu(false)}\n                  >\n                    <FontAwesomeIcon icon=\"times\" />\n                  </button>\n                </header>\n\n                <div className=\"navbar__menu-pages\">{pagesLinks}</div>\n\n                <div className=\"navbar__menu-user\">\n                  {isAuthenticated ? (\n                    <div className=\"navbar__menu-user-authenticated\">\n                      <NavLink\n                        to=\"/user\"\n                        className=\"navbar__menu-item navbar__menu-link\"\n                        onClick={() => this.toggleMenu(false)}\n                      >\n                        Dashboard\n                      </NavLink>\n\n                      <button\n                        type=\"button\"\n                        className=\"navbar__menu-item navbar__menu-button\"\n                        onClick={this.handleLogout}\n                      >\n                        Logout\n                      </button>\n                    </div>\n                  ) : (\n                    <UserModal toggleMenu={this.toggleMenu} />\n                  )}\n                </div>\n              </section>\n            </Container>\n          </nav>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispathToProps)(MainNavbar),\n);\n","import React from 'react';\nimport { Alert, Container, Row, Col } from 'react-bootstrap';\n\nfunction DemoAlert() {\n  return (\n    <Alert variant=\"info\" className=\"demo-alert\">\n      <Container>\n        <Row>\n          <Col>\n            Currently running <b>demo</b> build. Some features will be hidden or\n            disabled.\n          </Col>\n        </Row>\n      </Container>\n    </Alert>\n  );\n}\n\nexport default DemoAlert;\n","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport { Row, Col, Dropdown, Form, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n// Demo parameters.\nconst breeds = [\n  'Irish Terrier',\n  'Georgian Shepherd',\n  'Leonberger',\n  'Dogo Guatemalteco',\n  'Cretan Hound',\n];\nconst ages = ['Puppy', 'Young', 'Mature'];\nconst genders = ['Male', 'Female'];\nconst coatLengths = ['Short', 'Medium', 'Long'];\nconst preferHomes = ['Other dogs', 'Other cats', 'Children'];\nconst healths = ['Spayed/Neutered', 'Vaccinated'];\n\nconst initialValues = {\n  breed: '',\n  gender: '',\n  age: '',\n  coatLength: '',\n  preferHomeWith: [],\n  preferHomeWithout: [],\n  health: [],\n};\n\nfunction createFilterSelectOptions(data) {\n  return data.map((value) => (\n    <option key={value} value={value}>\n      {value}\n    </option>\n  ));\n}\n\nfunction createCheckbox(data, fieldName, selectedValues = []) {\n  return data.map((d) => (\n    <Field key={d} name={fieldName}>\n      {({ field }) => (\n        <Form.Check\n          {...field}\n          type=\"checkbox\"\n          label={d}\n          id={`${fieldName}-${d}`}\n          className=\"pet-form___field pet-form__field--checkbox\"\n          value={d}\n          checked={selectedValues.includes(d)}\n        />\n      )}\n    </Field>\n  ));\n}\n\nexport default function ListControlFilter(props) {\n  const breedOptions = createFilterSelectOptions(breeds);\n  const ageOptions = createFilterSelectOptions(ages);\n  const genderOptions = createFilterSelectOptions(genders);\n  const coatLengthOptions = createFilterSelectOptions(coatLengths);\n\n  const { handleReset: handleFormReset } = props;\n\n  const handleFormSubmit = (values) => {\n    const { applyControl } = props;\n\n    applyControl(values);\n  };\n\n  return (\n    <Dropdown className=\"list-control__dropdown list-control__dropdown--filter\">\n      <Dropdown.Toggle\n        variant=\"primary\"\n        id=\"list-filter\"\n        className=\"list-control__btn \"\n      >\n        <FontAwesomeIcon icon=\"filter\" /> Filter\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu className=\"list-control__menu list-control__menu--filter\">\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleFormSubmit}\n          onReset={handleFormReset}\n        >\n          {({ handleSubmit, handleReset, values }) => (\n            <Form onSubmit={handleSubmit} noValidate>\n              <Form.Row>\n                <Col xs=\"12\" md=\"6\">\n                  <Form.Group controlId=\"breed\">\n                    <Form.Label>Breed</Form.Label>\n                    <Field name=\"breed\">\n                      {({ field }) => (\n                        <Form.Control {...field} as=\"select\">\n                          <option value=\"\">All</option>\n                          {breedOptions}\n                        </Form.Control>\n                      )}\n                    </Field>\n                  </Form.Group>\n                </Col>\n\n                <Col xs=\"12\" md=\"6\">\n                  <Form.Group controlId=\"age\">\n                    <Form.Label>Age</Form.Label>\n                    <Field name=\"age\">\n                      {({ field }) => (\n                        <Form.Control {...field} as=\"select\">\n                          <option value=\"\">All</option>\n                          {ageOptions}\n                        </Form.Control>\n                      )}\n                    </Field>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n\n              <Form.Row>\n                <Col xs=\"12\" md=\"6\">\n                  <Form.Group controlId=\"gender\">\n                    <Form.Label>Gender</Form.Label>\n                    <Field name=\"gender\">\n                      {({ field }) => (\n                        <Form.Control {...field} as=\"select\">\n                          <option value=\"\">All</option>\n                          {genderOptions}\n                        </Form.Control>\n                      )}\n                    </Field>\n                  </Form.Group>\n                </Col>\n\n                <Col xs=\"12\" md=\"6\">\n                  <Form.Group controlId=\"coat-length\">\n                    <Form.Label>Coat length</Form.Label>\n                    <Field name=\"coatLength\">\n                      {({ field }) => (\n                        <Form.Control {...field} as=\"select\">\n                          <option value=\"\">All</option>\n                          {coatLengthOptions}\n                        </Form.Control>\n                      )}\n                    </Field>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n\n              <Form.Row>\n                <Col xs=\"12\" md=\"6\">\n                  <Form.Group controlId=\"prefer-home-with\">\n                    <Form.Label>Prefer home with</Form.Label>\n                    {createCheckbox(\n                      preferHomes,\n                      'preferHomeWith',\n                      values.preferHomeWith,\n                    )}\n                  </Form.Group>\n                </Col>\n\n                <Col xs=\"12\" md=\"6\">\n                  <Form.Group controlId=\"prefer-home-without\">\n                    <Form.Label>Prefer home without</Form.Label>\n                    {createCheckbox(\n                      preferHomes,\n                      'preferHomeWithout',\n                      values.preferHomeWithout,\n                    )}\n                  </Form.Group>\n                </Col>\n\n                <Col xs=\"12\" md=\"6\">\n                  <Form.Group controlId=\"health\">\n                    <Form.Label>Health</Form.Label>\n                    {createCheckbox(healths, 'health', values.health)}\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n\n              <div className=\"list-control__menu-control\">\n                <Row>\n                  <Col xs=\"12\" md=\"6\" lg=\"4\">\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      className=\"list-control__menu-btn list-control__menu-btn--apply\"\n                    >\n                      Apply\n                    </Button>\n                  </Col>\n\n                  <Col xs=\"12\" md=\"6\" lg=\"4\">\n                    <Button\n                      type=\"button\"\n                      variant=\"secondary\"\n                      className=\"list-control__menu-btn list-control__menu-btn--reset\"\n                      onClick={handleReset}\n                    >\n                      Reset\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React from 'react';\nimport { Form, Dropdown } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst sortKeys = [\n  { label: 'Newest', value: '-createdDate' },\n  { label: 'Oldest', value: 'createdDate' },\n  { label: 'A-Z', value: 'name' },\n  { label: 'Z-A', value: '-name' },\n];\n\nexport default function ListControlSort({ sort, applyControl }) {\n  const handleChange = ({ target: { value } }) => {\n    applyControl({ sort: value });\n  };\n\n  const createSortOptions = (data, currentValue) =>\n    data.map(({ label, value }) => (\n      <Form.Check\n        key={value}\n        type=\"radio\"\n        id={label}\n        label={label}\n        name=\"sort\"\n        value={value}\n        checked={currentValue === value}\n        onChange={handleChange}\n      />\n    ));\n\n  const sortOptions = createSortOptions(sortKeys, sort);\n\n  return (\n    <Dropdown className=\"list-control__dropdown list-control__dropdown--filter\">\n      <Dropdown.Toggle\n        variant=\"primary\"\n        id=\"list-sort\"\n        className=\"list-control__btn\"\n      >\n        <FontAwesomeIcon icon=\"sort-alpha-down\" /> Sort\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"list-control__menu list-control__menu--sort\">\n        {sortOptions}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport ListControlFilter from './ListControlFilter';\nimport ListControlSort from './ListControlSort';\n\nconst initialState = {\n  breed: '',\n  gender: '',\n  age: '',\n  coatLength: '',\n  preferHomeWith: [],\n  preferHomeWithout: [],\n  health: [],\n  sort: '-createdDate',\n};\n\nclass ListControl extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  handleReset = () => {\n    const { baseUrl, history } = this.props;\n\n    this.setState(initialState, () => {\n      history.push(baseUrl);\n    });\n  };\n\n  applyControl = (changes) => {\n    const { baseUrl, history } = this.props;\n\n    this.setState(changes, () => {\n      const controls = this.state;\n      const params = new URLSearchParams();\n\n      Object.keys(controls).forEach((key) => {\n        const value = controls[key];\n        const isArray = Array.isArray(value);\n        // Array-like params parse.\n        if (isArray && value.length > 0) {\n          value.forEach((arrayValue) => {\n            params.append(key, arrayValue);\n          });\n        }\n        // Non-array params parse.\n        if (!isArray && value) {\n          params.set(key, value);\n        }\n      });\n      const search = params.toString() ? `?${params.toString()}` : '';\n\n      history.push({\n        pathname: `${baseUrl}/1`,\n        search,\n      });\n    });\n  };\n\n  render() {\n    const { newButton, className } = this.props;\n    const { sort } = this.state;\n\n    return (\n      <div className={`list-control ${className}`}>\n        <div className=\"list-control__filter-sort\">\n          <ListControlFilter\n            handleReset={this.handleReset}\n            applyControl={this.applyControl}\n          />\n\n          <ListControlSort sort={sort} applyControl={this.applyControl} />\n        </div>\n\n        {newButton && (\n          <Link\n            to=\"/user/pet/manage/new\"\n            className=\"btn list-control__btn list-control__btn--new\"\n          >\n            <FontAwesomeIcon icon=\"plus\" /> New\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ListControl);\n","import React from 'react';\nimport { Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { API_ENDPOINT } from './store/DataSource';\n\nconst { REACT_APP_IS_DEMO } = process.env;\nconst isDemo = REACT_APP_IS_DEMO === 'true';\n\nexport default function PetCard({\n  pet: { _id, name, breed, images },\n  baseUrl,\n  handleDelete,\n  controlOverlay,\n}) {\n  const linkUrl = `${baseUrl}/${_id}`;\n\n  const controlTooltip = (text) => (\n    <Tooltip id={`tooltip-${text}`}>{text}</Tooltip>\n  );\n\n  return (\n    <Card className=\"pet\">\n      <Link to={linkUrl}>\n        <Card.Img\n          variant=\"top\"\n          src={`${API_ENDPOINT}${images[0].path}`}\n          className=\"pet__image\"\n        />\n      </Link>\n\n      <Card.Body className=\"pet__body\">\n        <Link to={linkUrl} className=\"pet__body-name\">\n          <Card.Title className=\"pet__body-title\">{name}</Card.Title>\n        </Link>\n\n        <Card.Text className=\"pet__body-breed\">\n          <small>{breed}</small>\n        </Card.Text>\n      </Card.Body>\n\n      {controlOverlay && (\n        <div className=\"pet__control\">\n          <OverlayTrigger placement=\"left\" overlay={controlTooltip('Edit')}>\n            <Link\n              to={linkUrl}\n              className=\"pet__control-btn pet__control-btn--edit\"\n            >\n              <FontAwesomeIcon icon=\"edit\" />\n            </Link>\n          </OverlayTrigger>\n\n          {!isDemo && (\n            <OverlayTrigger placement=\"left\" overlay={controlTooltip('Delete')}>\n              <button\n                type=\"button\"\n                variant=\"primary\"\n                className=\"pet__control-btn pet__control-btn--delete\"\n                onClick={() => handleDelete(_id)}\n              >\n                <FontAwesomeIcon icon=\"trash\" />\n              </button>\n            </OverlayTrigger>\n          )}\n        </div>\n      )}\n    </Card>\n  );\n}\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\n\nconst mapStateToProps = (state, ownProps) => {\n  const { baseUrl } = ownProps;\n\n  switch (baseUrl) {\n    case '/home':\n      return {\n        page: state.petList.page,\n        pages: state.petList.pages,\n      };\n\n    case '/user/pet':\n      return {\n        page: state.userPetList.page,\n        pages: state.userPetList.pages,\n      };\n\n    default:\n      return {};\n  }\n};\n\nfunction Pagination(props) {\n  const { page, pages, className } = props;\n  const isFirstPage = page === 1;\n  const isLastPage = page === pages;\n\n  const handleChangePage = (nextPage) => {\n    const { history, location, baseUrl } = props;\n    const pathname = `${baseUrl}/${nextPage}`;\n\n    history.push({ ...location, pathname });\n  };\n\n  return (\n    <div className={`pagination ${className}`}>\n      <Button\n        variant=\"primary\"\n        className=\"pagination__btn\"\n        disabled={isFirstPage}\n        onClick={() => handleChangePage(1)}\n      >\n        <span className=\"pagination__icon pagination__icon--double\">\n          <FontAwesomeIcon icon=\"chevron-left\" />\n          <FontAwesomeIcon icon=\"chevron-left\" />\n        </span>\n        <span className=\"pagination__text\">First</span>\n      </Button>\n\n      <Button\n        variant=\"primary\"\n        className=\"pagination__btn\"\n        disabled={isFirstPage}\n        onClick={() => handleChangePage(page - 1)}\n      >\n        <span className=\"pagination__icon\">\n          <FontAwesomeIcon icon=\"chevron-left\" />\n        </span>\n        <span className=\"pagination__text\">Prev</span>\n      </Button>\n\n      <span className=\"pagination__info\">\n        Page <strong>{page}</strong> out of <strong>{pages}</strong>\n      </span>\n\n      <Button\n        variant=\"primary\"\n        className=\"pagination__btn\"\n        disabled={isLastPage}\n        onClick={() => handleChangePage(page + 1)}\n      >\n        <span className=\"pagination__icon\">\n          <FontAwesomeIcon icon=\"chevron-right\" />\n        </span>\n        <span className=\"pagination__text\">Next</span>\n      </Button>\n\n      <Button\n        variant=\"primary\"\n        className=\"pagination__btn\"\n        disabled={isLastPage}\n        onClick={() => handleChangePage(pages)}\n      >\n        <span className=\"pagination__icon\">\n          <FontAwesomeIcon icon=\"chevron-right\" />\n          <FontAwesomeIcon icon=\"chevron-right\" />\n        </span>\n        <span className=\"pagination__text\">Last</span>\n      </Button>\n    </div>\n  );\n}\n\nexport default withRouter(connect(mapStateToProps)(Pagination));\n","import React from 'react';\n\nexport default function NoDataFound() {\n  return (\n    <div className=\"no-data-found\">\n      <h1>No data found.</h1>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nconst controlKeys = [\n  { key: 'breed', dataType: 'string' },\n  { key: 'gender', dataType: 'string' },\n  { key: 'age', dataType: 'string' },\n  { key: 'coatLength', dataType: 'string' },\n  { key: 'preferHomeWith', dataType: 'array' },\n  { key: 'preferHomeWithout', dataType: 'array' },\n  { key: 'health', dataType: 'array' },\n  { key: 'sort', dataType: 'string' },\n];\n\n// Convert URL search params to GraphQL variables.\nfunction paramsToVariables(search) {\n  const params = new URLSearchParams(search);\n  const variables = {};\n\n  // Get the key-value pair.\n  // Then, filter out the unused parameters.\n  const data = controlKeys\n    .map(({ key, dataType }) => {\n      const value = dataType === 'array' ? params.getAll(key) : params.get(key);\n      return { key, value };\n    })\n    .filter(({ value }) => {\n      const isArray = Array.isArray(value);\n      let result;\n      if (isArray) result = value.length > 0;\n      else result = value !== null;\n\n      return result;\n    });\n  // Convert it to final variables object.\n  data.forEach(({ key, value }) => {\n    variables[key] = value;\n  });\n\n  return variables;\n}\n\nexport default function withSearchToVariables(WrappedComponent) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        variables: {},\n      };\n    }\n\n    componentDidMount() {\n      this.parseSearch();\n    }\n\n    componentDidUpdate(prevProps) {\n      const {\n        location: { search: prevSearch },\n      } = prevProps;\n      const {\n        location: { search: currentSearch },\n      } = this.props;\n\n      if (prevSearch !== currentSearch) this.parseSearch();\n    }\n\n    parseSearch = () => {\n      const {\n        location: { search },\n      } = this.props;\n      const variables = paramsToVariables(search);\n\n      this.setState({ variables });\n    };\n\n    render() {\n      const { variables } = this.state;\n\n      return <WrappedComponent {...this.props} variables={variables} />;\n    }\n  };\n}\n","/* eslint-disable no-underscore-dangle */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport '../css/home.min.css';\n\nimport actionCreator from './store/actionCreator';\nimport ListControl from './ListControl';\nimport PetCard from './PetCard';\nimport Pagination from './Pagination';\nimport NoDataFound from './NoDataFound';\nimport withSearchToVariables from './withSearchToVariables';\n\nconst mapStateToProps = ({ petList }) => ({\n  petList,\n});\nconst mapDispatchToProps = {\n  getPetList: actionCreator.getPetList,\n};\n\nfunction createPetItems(petArray) {\n  return petArray.map((pet) => (\n    <Col key={pet._id} sm=\"6\" md=\"4\">\n      <PetCard pet={pet} baseUrl=\"/pet\" />\n    </Col>\n  ));\n}\n\nclass Home extends Component {\n  componentDidMount() {\n    document.body.classList.add('page-home');\n\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      variables: prevVars,\n      match: {\n        params: { page: prevPage },\n      },\n    } = prevProps;\n    const {\n      variables: currentVars,\n      match: {\n        params: { page: currentPage },\n      },\n    } = this.props;\n\n    if (prevVars !== currentVars || prevPage !== currentPage) this.loadData();\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('page-home');\n  }\n\n  loadData = () => {\n    const {\n      getPetList,\n      variables,\n      match: {\n        params: { page },\n      },\n    } = this.props;\n    const gqlVariables = { ...variables, page: Number(page) };\n\n    getPetList(gqlVariables);\n  };\n\n  render() {\n    const {\n      petList: { docs },\n    } = this.props;\n    const petItems = createPetItems(docs);\n\n    return (\n      <main className=\"main-container\">\n        <section className=\"hero\">\n          <h2 className=\"hero__catchphrase\">\n            <strong>Your Pet Buddy</strong> is\n          </h2>\n          <h2 className=\"hero__catchphrase\">waiting for you</h2>\n        </section>\n\n        <section className=\"pet-list\">\n          <Container>\n            <Row>\n              <Col>\n                <h1 className=\"pet-list__title\">Find Your Pet</h1>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <ListControl baseUrl=\"/home\" className=\"pet-list__control\" />\n              </Col>\n            </Row>\n\n            <div className=\"pet-list__items\">\n              <Row>\n                {docs.length === 0 ? (\n                  <Col>\n                    <NoDataFound />\n                  </Col>\n                ) : (\n                  petItems\n                )}\n              </Row>\n            </div>\n\n            <Pagination baseUrl=\"/home\" className=\"pet-list__pagination\" />\n          </Container>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default withSearchToVariables(\n  connect(mapStateToProps, mapDispatchToProps)(Home),\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Carousel } from 'react-bootstrap';\n\nimport '../css/pet-details.min.css';\n\nimport actionCreator from './store/actionCreator';\nimport { API_ENDPOINT } from './store/DataSource';\n\nconst mapStateToProps = ({ petDetails }) => ({\n  petDetails,\n});\nconst mapDispatchToProps = {\n  getPetDetails: actionCreator.getPetDetails,\n};\n\nfunction createCarouselItems(data, petName) {\n  return data.map((image, index) => (\n    <Carousel.Item key={image.filename} className=\"pet-carousel__item\">\n      <img\n        src={`${API_ENDPOINT}${image.path}`}\n        alt={`${petName}-${index + 1}`}\n        className=\"pet-carousel__image\"\n      />\n    </Carousel.Item>\n  ));\n}\n\nfunction createDataSections(data, sectionName) {\n  return data.map(({ field, value, cssModifier }) => {\n    const className = `data-section ${sectionName}__info ${sectionName}-info--${cssModifier}`;\n    return (\n      <div key={field} className={className}>\n        <div className={`${sectionName}__info-field`}>{field}:</div>\n        <div className={`${sectionName}__info-value`}>{value}</div>\n      </div>\n    );\n  });\n}\n\nfunction arrayToCommaString(array) {\n  return array.join(', ');\n}\n\nclass PetDetails extends Component {\n  componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      getPetDetails,\n    } = this.props;\n\n    getPetDetails(id);\n\n    document.body.classList.add('page-pet-details');\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('page-pet-details');\n  }\n\n  render() {\n    const { petDetails } = this.props;\n\n    if (!petDetails || Object.keys(petDetails).length === 0) return null;\n\n    const {\n      name,\n      breed,\n      gender,\n      age,\n      coatLength,\n      preferHomeWith,\n      preferHomeWithout,\n      health,\n      images,\n      description,\n      author: { email, phone, address },\n    } = petDetails;\n    const carouselItems = createCarouselItems(images, name);\n    const aboutData = [\n      { field: 'Breed', value: breed, cssModifier: 'breed' },\n      { field: 'Gender', value: gender, cssModifier: 'gender' },\n      { field: 'Age', value: age, cssModifier: 'age' },\n      { field: 'Coat length', value: coatLength, cssModifier: 'coat-length' },\n      {\n        field: 'Health',\n        value: arrayToCommaString(health),\n        cssModifier: 'health',\n      },\n      {\n        field: 'Prefer home with',\n        value: arrayToCommaString(preferHomeWith),\n        cssModifier: 'prefer-home-with',\n      },\n      {\n        field: 'Prefer home without',\n        value: arrayToCommaString(preferHomeWithout),\n        cssModifier: 'prefer-home-without',\n      },\n    ];\n    const contactData = [\n      { field: 'Email', value: email, cssModifier: 'email' },\n      { field: 'Phone', value: phone, cssModifier: 'phone' },\n      { field: 'Address', value: address, cssModifier: 'address' },\n    ];\n\n    const aboutDataSections = createDataSections(aboutData, 'about');\n    const contactDataSections = createDataSections(contactData, 'contact');\n\n    return (\n      <main className=\"main-container\">\n        <Container>\n          <Row>\n            <Col>\n              <Carousel interval={null} className=\"pet-carousel\">\n                {carouselItems}\n              </Carousel>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <h1 className=\"name\">{name}</h1>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs=\"12\" md=\"7\">\n              <section className=\"about info-section\">\n                <h2 className=\"section-header about__title\">About</h2>\n\n                {aboutDataSections}\n              </section>\n\n              <section className=\"description info-section\">\n                <h2 className=\"section-header description__title\">\n                  Description\n                </h2>\n\n                <p>{description}</p>\n              </section>\n            </Col>\n\n            <Col xs=\"12\" md=\"5\">\n              <section className=\"contact info-section\">\n                <h2 className=\"section-header contact__title\">Contact</h2>\n\n                {contactDataSections}\n              </section>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PetDetails);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Formik, Field } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport '../css/contact.min.css';\nimport DataSource from './store/DataSource';\nimport FormErrorMessage from './FormErrorMessage';\n\nconst dataSource = new DataSource();\n\nconst initialValues = {\n  name: '',\n  email: '',\n  subject: '',\n  message: '',\n};\n\nconst formModel = [\n  { name: 'name', controlId: 'name', label: 'Name', type: 'text', as: 'input' },\n  {\n    name: 'email',\n    controlId: 'email',\n    label: 'Email',\n    type: 'email',\n    as: 'input',\n  },\n  {\n    name: 'subject',\n    controlId: 'subject',\n    label: 'Subject',\n    type: 'text',\n    as: 'input',\n  },\n  { name: 'message', controlId: 'message', label: 'Message', as: 'textarea' },\n];\n\nfunction createFormFields(data) {\n  return data.map(({ name, controlId, label, type, as }) => (\n    <Form.Group key={name} controlId={controlId} className=\"form__group\">\n      <Form.Label className=\"form__label\">{label}</Form.Label>\n      <Field name={name}>\n        {({ field }) => (\n          <Form.Control\n            type={type || 'text'}\n            as={as}\n            className={`form__field form__field--${name}`}\n            {...field}\n          />\n        )}\n      </Field>\n    </Form.Group>\n  ));\n}\n\nexport default class Contact extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: {\n        show: false,\n        message: '',\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.body.classList.add('page-contact');\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('page-contact');\n  }\n\n  handleSubmit = async (values) => {\n    const { history } = this.props;\n\n    const result = await dataSource.postData('/message', values);\n\n    if (!result.success) {\n      this.setState({\n        error: {\n          show: true,\n          message: result.message,\n        },\n      });\n\n      return undefined;\n    }\n\n    history.push('/home');\n    alert('Thank you for your message.');\n\n    return undefined;\n  };\n\n  render() {\n    const {\n      error: { show, message },\n    } = this.state;\n    const formFields = createFormFields(formModel);\n\n    return (\n      <main className=\"main-container\">\n        <Container>\n          <Row>\n            <Col xs=\"12\" md=\"4\" lg=\"3\">\n              <section className=\"information\">\n                <h2 className=\"section-header information__header\">\n                  Contact Information\n                </h2>\n                <p className=\"information__intro\">\n                  We will be happy to answer your questions. You may use our\n                  contacts below or the form right next up.\n                </p>\n                <ul className=\"information__contact-list\">\n                  <li className=\"information__contact-item\">\n                    <span className=\"information__contact-icon\">\n                      <FontAwesomeIcon icon={['far', 'envelope']} />\n                    </span>\n                    <span className=\"information__contact-text\">\n                      customer@pettake.com\n                    </span>\n                  </li>\n\n                  <li className=\"information__contact-item\">\n                    <span className=\"information__contact-icon\">\n                      <FontAwesomeIcon icon=\"phone\" />\n                    </span>\n                    <span className=\"information__contact-text\">\n                      +1 2233 44231\n                    </span>\n                  </li>\n                </ul>\n              </section>\n            </Col>\n\n            <Col xs=\"12\" md=\"8\" lg=\"7\">\n              <section className=\"form\">\n                <h2 className=\"section-header form__header\">Contact Form</h2>\n\n                {show && <FormErrorMessage message={message} />}\n\n                <Formik\n                  initialValues={initialValues}\n                  onSubmit={this.handleSubmit}\n                >\n                  {({ handleSubmit }) => (\n                    <Form\n                      noValidate\n                      onSubmit={handleSubmit}\n                      className=\"form__form\"\n                    >\n                      {formFields}\n\n                      <div className=\"form__control\">\n                        <Button\n                          variant=\"primary\"\n                          type=\"submit\"\n                          className=\"form__btn form__btn--submit\"\n                        >\n                          Send\n                        </Button>\n                        <Button\n                          type=\"button\"\n                          className=\"form__btn form__btn--cancel\"\n                        >\n                          Cancel\n                        </Button>\n                      </div>\n                    </Form>\n                  )}\n                </Formik>\n              </section>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function Footer() {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"container\">\n        <section className=\"brand\">\n          <h1 className=\"brand__logo\">PetTake</h1>\n          <p className=\"brand__catchphrase\">\n            Your pet buddy is waiting for you.\n          </p>\n        </section>\n\n        <section className=\"sitemap\">\n          <h2 className=\"page-footer__section-header sitemap__header\">\n            Sitemap\n          </h2>\n\n          <ul className=\"sitemap__list\">\n            <li className=\"sitemap__list-item\">\n              <Link\n                to=\"/home\"\n                className=\"sitemap__list-link sitemap__list-link__home\"\n              >\n                Home\n              </Link>\n            </li>\n\n            <li className=\"sitemap__list-item\">\n              <Link\n                to=\"/contact\"\n                className=\"sitemap__list-link sitemap__list-link__contact\"\n              >\n                Contact\n              </Link>\n            </li>\n          </ul>\n        </section>\n\n        <section className=\"contact\">\n          <h2 className=\"page-footer__section-header contact__header\">\n            Contact us\n          </h2>\n\n          <ul className=\"contact__list\">\n            <li className=\"contact__list-item\">\n              <span className=\"contact__list-logo\">\n                <FontAwesomeIcon icon={['far', 'envelope']} />\n              </span>\n              <span className=\"contact__list-info\">\n                customer_service@pettake.com\n              </span>\n            </li>\n            <li className=\"contact__list-item\">\n              <span className=\"contact__list-logo\">\n                <FontAwesomeIcon icon=\"phone\" />\n              </span>\n              <span className=\"contact__list-info\">+1 2233 44231</span>\n            </li>\n            <li className=\"contact__list-item\">\n              <span className=\"contact__list-logo\">\n                <FontAwesomeIcon icon=\"map-marker-alt\" />\n              </span>\n              <span className=\"contact__list-info\">\n                2444 Merryweather street, WI 53188\n              </span>\n            </li>\n          </ul>\n        </section>\n\n        <section className=\"copyright\">\n          <p>Copyright PetTake</p>\n        </section>\n      </div>\n    </footer>\n  );\n}\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { withRouter } from 'react-router-dom';\n\nfunction DashboardNav() {\n  return (\n    <Nav variant=\"tabs\" className=\"user-nav\">\n      <Nav.Item className=\"user-nav__item\">\n        <LinkContainer to=\"/user/pet\">\n          <Nav.Link eventKey=\"pet-list\" className=\"user-nav__link\">\n            Pet list\n          </Nav.Link>\n        </LinkContainer>\n      </Nav.Item>\n\n      <Nav.Item className=\"user-nav__item\">\n        <LinkContainer to=\"/user/setting\">\n          <Nav.Link eventKey=\"setting\" className=\"user-nav__link\">\n            Account setting\n          </Nav.Link>\n        </LinkContainer>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default withRouter(DashboardNav);\n","/* eslint-disable no-underscore-dangle */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport '../../css/user-pet-list.min.css';\n\nimport actionCreator from '../store/actionCreator';\nimport ListControl from '../ListControl';\nimport PetCard from '../PetCard';\nimport Pagination from '../Pagination';\nimport NoDataFound from '../NoDataFound';\nimport withSearchToVariables from '../withSearchToVariables';\nimport DashboardNav from './DashboardNav';\n\nconst mapStateToProps = ({ userPetList }) => ({\n  userPetList,\n});\nconst mapDispatchToProps = {\n  getUserPetList: actionCreator.getUserPetList,\n  deletePet: actionCreator.deletePet,\n};\n\nfunction createPetItems(petArray, handleDelete) {\n  return petArray.map((pet) => (\n    <Col key={pet._id} sm=\"6\" md=\"4\">\n      <PetCard\n        pet={pet}\n        baseUrl=\"/user/pet/manage/edit\"\n        handleDelete={handleDelete}\n        controlOverlay\n      />\n    </Col>\n  ));\n}\n\nclass UserPetList extends Component {\n  componentDidMount() {\n    document.body.classList.add('page-user-pet-list');\n\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      variables: prevVars,\n      match: {\n        params: { page: prevPage },\n      },\n    } = prevProps;\n    const {\n      variables: currentVars,\n      match: {\n        params: { page: currentPage },\n      },\n    } = this.props;\n\n    if (prevVars !== currentVars || prevPage !== currentPage) this.loadData();\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('page-user-pet-list');\n  }\n\n  handleDelete = async (_id) => {\n    try {\n      const { deletePet } = this.props;\n\n      await deletePet(_id);\n    } catch (error) {\n      alert(`UserPetList error: ${error.message}`);\n    }\n  };\n\n  loadData = () => {\n    const {\n      getUserPetList,\n      variables,\n      match: {\n        params: { page },\n      },\n    } = this.props;\n    const gqlVariables = { ...variables, page: Number(page) };\n\n    getUserPetList(gqlVariables);\n  };\n\n  render() {\n    const {\n      userPetList: { docs },\n    } = this.props;\n\n    return (\n      <main className=\"main-container\">\n        <Container>\n          <Row>\n            <Col>\n              <DashboardNav />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <section className=\"user-pet\">\n                <ListControl\n                  baseUrl=\"/user/pet\"\n                  newButton\n                  className=\"user-pet__control\"\n                />\n\n                <div className=\"user-pet__list\">\n                  <Row>\n                    {docs.length === 0 ? (\n                      <Col>\n                        <NoDataFound />\n                      </Col>\n                    ) : (\n                      createPetItems(docs, this.handleDelete)\n                    )}\n                  </Row>\n                </div>\n\n                <Pagination\n                  baseUrl=\"/user/pet\"\n                  className=\"user-pet__pagination\"\n                />\n              </section>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n    );\n  }\n}\n\nexport default withSearchToVariables(\n  connect(mapStateToProps, mapDispatchToProps)(UserPetList),\n);\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Form, Button } from 'react-bootstrap';\nimport { Formik, Field } from 'formik';\nimport { connect } from 'react-redux';\n\nimport actionCreator from '../store/actionCreator';\n\nconst { REACT_APP_IS_DEMO } = process.env;\nconst isDemo = REACT_APP_IS_DEMO === 'true';\n\n// We need everything but username because it shouldn't be changed.\nconst mapStateToProps = ({ user: { username, ...userData } }) => ({\n  userData,\n});\nconst mapDispatchToProps = {\n  userInfoUpdate: actionCreator.userInfoUpdate,\n};\n\nclass UserBasicSetting extends Component {\n  constructor() {\n    super();\n    this.state = {\n      basicInfoMode: 'view',\n    };\n  }\n\n  handleBasicInfoToggle = (state) => {\n    this.setState({ basicInfoMode: state });\n  };\n\n  handleSubmit = (values) => {\n    if (isDemo) return undefined;\n\n    const { userInfoUpdate } = this.props;\n\n    userInfoUpdate({ changes: values });\n\n    this.setState({ basicInfoMode: 'view' });\n\n    return undefined;\n  };\n\n  render() {\n    const { userData } = this.props;\n    const { basicInfoMode } = this.state;\n    const { email, name, phone, address } = userData;\n\n    return (\n      <div className=\"user-account__section user-account__basic\">\n        <header className=\"user-account__basic-header section-header\">\n          <h2 className=\"user-account__basic-title section-title\">\n            Basic Information\n          </h2>\n          <button\n            type=\"button\"\n            className=\"user-account__basic-mode-toggle\"\n            onClick={() => this.handleBasicInfoToggle('edit')}\n          >\n            <FontAwesomeIcon icon=\"cog\" /> Change basic information\n          </button>\n        </header>\n\n        {basicInfoMode === 'view' ? (\n          <div className=\"user-account__basic-view\">\n            <div className=\"field\">\n              <div className=\"field__label\">Email:</div>\n              <div className=\"field__value\">{email}</div>\n            </div>\n\n            <div className=\"field\">\n              <div className=\"field__label\">Name:</div>\n              <div className=\"field__value\">{name}</div>\n            </div>\n\n            <div className=\"field\">\n              <div className=\"field__label\">Phone:</div>\n              <div className=\"field__value\">{phone}</div>\n            </div>\n\n            <div className=\"field\">\n              <div className=\"field__label\">Address:</div>\n              <div className=\"field__value\">{address}</div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"user-account__basic-edit\">\n            <Formik initialValues={userData} onSubmit={this.handleSubmit}>\n              {({ handleSubmit }) => (\n                <Form\n                  noValidate\n                  onSubmit={handleSubmit}\n                  className=\"user-account__basic-form\"\n                >\n                  <Form.Group className=\"field field--email\" controlId=\"email\">\n                    <Form.Label className=\"field__label\">Email</Form.Label>\n                    <Field name=\"email\">\n                      {({ field }) => (\n                        <Form.Control\n                          {...field}\n                          type=\"text\"\n                          className=\"field__value field__input\"\n                        />\n                      )}\n                    </Field>\n                  </Form.Group>\n\n                  <Form.Group className=\"field field--name\" controlId=\"name\">\n                    <Form.Label className=\"field__label\">Name</Form.Label>\n                    <Field name=\"name\">\n                      {({ field }) => (\n                        <Form.Control\n                          {...field}\n                          type=\"text\"\n                          className=\"field__value field__input\"\n                        />\n                      )}\n                    </Field>\n                  </Form.Group>\n\n                  <Form.Group className=\"field field--phone\" controlId=\"phone\">\n                    <Form.Label className=\"field__label\">Phone</Form.Label>\n                    <Field name=\"phone\">\n                      {({ field }) => (\n                        <Form.Control\n                          {...field}\n                          type=\"text\"\n                          className=\"field__value field__input\"\n                        />\n                      )}\n                    </Field>\n                  </Form.Group>\n\n                  <Form.Group\n                    className=\"field field--address\"\n                    controlId=\"address\"\n                  >\n                    <Form.Label className=\"field__label\">Address</Form.Label>\n                    <Field name=\"address\">\n                      {({ field }) => (\n                        <Form.Control\n                          {...field}\n                          as=\"textarea\"\n                          className=\"field__value field__input field__input--textarea\"\n                        />\n                      )}\n                    </Field>\n                  </Form.Group>\n\n                  <div className=\"field\">\n                    <div className=\"field__label\" />\n\n                    <div className=\"field__value user-account__form-control\">\n                      <Button\n                        type=\"submit\"\n                        variant=\"primary\"\n                        className=\"user-account__form-btn user-account__form-btn--primary user-account__basic-form-btn\"\n                        disabled={isDemo}\n                      >\n                        Submit\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        variant=\"primary\"\n                        className=\"user-account__form-btn user-account__form-btn--light user-account__basic-form-btn\"\n                        onClick={() => this.handleBasicInfoToggle('view')}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserBasicSetting);\n","import yup from './index';\n\nconst ChangePasswordSchema = yup.object().shape({\n  oldPassword: yup.string().required('Required'),\n  newPassword: yup.string().required('Required'),\n  newPasswordRepeat: yup\n    .string()\n    .required('Required')\n    .equalTo(yup.ref('newPassword'), 'Password does not match'),\n});\n\nexport default ChangePasswordSchema;\n","import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Formik, Field } from 'formik';\n\nimport DataSource from '../store/DataSource';\nimport actionTypes from '../store/actionTypes';\nimport mutations from '../store/graphQLMutations';\nimport ChangePasswordSchema from '../helpers/yup/ChangePasswordSchema';\nimport FormErrorMessage from '../FormErrorMessage';\n\nconst { REACT_APP_IS_DEMO } = process.env;\nconst isDemo = REACT_APP_IS_DEMO === 'true';\n\nconst dataSource = new DataSource();\n\nconst initialValue = {\n  oldPassword: '',\n  newPassword: '',\n  newPasswordRepeat: '',\n};\n\nclass UserPasswordSetting extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: {\n        show: false,\n        message: '',\n      },\n    };\n  }\n\n  handleFormSubmit = async (\n    { oldPasswordRepeat, ...variables },\n    { resetForm },\n  ) => {\n    if (isDemo) return undefined;\n\n    try {\n      const result = await dataSource.graphQLFetch(\n        mutations[actionTypes.USER_CHANGE_PASSWORD],\n        variables,\n      );\n\n      if (result) {\n        resetForm();\n        this.setState({ error: { show: false } });\n        alert('Successfully change password.');\n      }\n    } catch (error) {\n      this.setState({ error: { show: true, message: error.message } });\n    }\n\n    return undefined;\n  };\n\n  render() {\n    const {\n      error: { show, message },\n    } = this.state;\n\n    return (\n      <div className=\"user-account__section user-account__password\">\n        <header className=\"section-header\">\n          <h2 className=\"user-account__password-title section-title\">\n            Change Password\n          </h2>\n        </header>\n\n        {show && <FormErrorMessage message={message} />}\n\n        <Formik\n          initialValues={initialValue}\n          onSubmit={this.handleFormSubmit}\n          validationSchema={ChangePasswordSchema}\n        >\n          {({ handleSubmit, handleReset, touched, errors }) => (\n            <Form\n              noValidate\n              onSubmit={handleSubmit}\n              className=\"user-account__password-form\"\n            >\n              <Form.Group className=\"field\" controlId=\"old-password\">\n                <Form.Label className=\"field__label\">Old password</Form.Label>\n                <Field name=\"oldPassword\">\n                  {({ field }) => (\n                    <Form.Control\n                      {...field}\n                      type=\"password\"\n                      className=\"field__value  field__input\"\n                      isInvalid={touched.oldPassword && errors.oldPassword}\n                    />\n                  )}\n                </Field>\n\n                <Form.Control.Feedback\n                  className=\"field__feedback\"\n                  type=\"invalid\"\n                >\n                  {errors.oldPassword}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group className=\"field\" controlId=\"new-password\">\n                <Form.Label className=\"field__label\">New password</Form.Label>\n                <Field name=\"newPassword\">\n                  {({ field }) => (\n                    <Form.Control\n                      {...field}\n                      type=\"password\"\n                      className=\"field__value  field__input\"\n                      isInvalid={touched.newPassword && errors.newPassword}\n                    />\n                  )}\n                </Field>\n\n                <Form.Control.Feedback\n                  className=\"field__feedback\"\n                  type=\"invalid\"\n                >\n                  {errors.newPassword}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group className=\"field\" controlId=\"new-password-repeat\">\n                <Form.Label className=\"field__label\">\n                  Repeat new password\n                </Form.Label>\n                <Field name=\"newPasswordRepeat\">\n                  {({ field }) => (\n                    <Form.Control\n                      {...field}\n                      type=\"password\"\n                      className=\"field__value  field__input\"\n                      isInvalid={\n                        touched.newPasswordRepeat && errors.newPasswordRepeat\n                      }\n                    />\n                  )}\n                </Field>\n\n                <Form.Control.Feedback\n                  className=\"field__feedback\"\n                  type=\"invalid\"\n                >\n                  {errors.newPasswordRepeat}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <div className=\"field\">\n                <div className=\"field__label\" />\n\n                <div className=\"field__value user-account__form-control\">\n                  <Button\n                    type=\"submit\"\n                    variant=\"primary\"\n                    className=\"user-account__form-btn user-account__form-btn--primary user-account__password-form-btn\"\n                    disabled={isDemo}\n                  >\n                    Submit\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant=\"primary\"\n                    className=\"user-account__form-btn user-account__form-btn--light user-account__password-form-btn\"\n                    onClick={handleReset}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nexport default UserPasswordSetting;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport '../../css/user-account.min.css';\n\nimport UserBasicSetting from './UserBasicSetting';\nimport UserPasswordSetting from './UserPasswordSetting';\nimport DashboardNav from './DashboardNav';\n\nexport default class UserPetList extends Component {\n  componentDidMount() {\n    document.body.classList.add('page-user-account');\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('page-user-account');\n  }\n\n  render() {\n    return (\n      <main className=\"main-container\">\n        <Container>\n          <Row>\n            <Col>\n              <DashboardNav />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <section className=\"user-account\">\n                <UserBasicSetting />\n                <UserPasswordSetting />\n              </section>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { Component } from 'react';\nimport { Form, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport DataSource, { API_ENDPOINT } from '../store/DataSource';\n\nconst { REACT_APP_IS_DEMO } = process.env;\nconst isDemo = REACT_APP_IS_DEMO === 'true';\n\nconst dataSource = new DataSource();\n\nfunction controlTooltip(text) {\n  return <Tooltip id={`tooltip-${text}`}>{text}</Tooltip>;\n}\n\nclass PetFormImageInput extends Component {\n  constructor() {\n    super();\n    this.fileInputRef = React.createRef();\n  }\n\n  handleAdd = async ({ target: { files } }) => {\n    try {\n      const { images, setFieldValue } = this.props;\n\n      const form = new FormData();\n\n      for (let i = 0; i < files.length; i += 1) {\n        const file = files[i];\n        form.append('images', file);\n      }\n\n      const result = await dataSource.postData('/image', form);\n\n      setFieldValue('images', images.concat(result));\n    } catch (error) {\n      console.log(error);\n      alert('PetFormImageInput image add error.');\n    }\n    // Reset file input file state.\n    /* A silent error happens in this chronology:\n    1. Upload \"image-one.jpg\". (name doesn't matter)\n    2. Successful upload.\n    3. Delete \"image-one.jpg\".\n    4. Successful delete.\n    5. Upload \"image-one.jpg\", again.\n    6. The code does nothing.\n    Conclusion: The file input does not fire the \"change\" event because it has the\n    same \"files\" state as the previous file input change event. The problem doesn't\n    occur if I use a different set of images, resulting in a different set of \"files\"\n    state. */\n    this.fileInputRef.current.value = null;\n  };\n\n  handleDelete = async (filename) => {\n    try {\n      const { images, setFieldValue } = this.props;\n\n      const result = await dataSource.deleteData('/image', { filename });\n\n      if (result.success) {\n        // Filter out the recently deleted image from pet form state.\n        const filteredImages = images.filter(\n          (img) => img.filename !== filename,\n        );\n\n        setFieldValue('images', filteredImages);\n      }\n    } catch (error) {\n      console.log(error);\n      alert('PetFormImageInput image delete error.');\n    }\n  };\n\n  createImages = () => {\n    const { images, petName } = this.props;\n\n    return images.map(({ path, filename }) => (\n      <div key={filename} className=\"pet-form__image-wrapper\">\n        <img\n          src={`${API_ENDPOINT}${path}`}\n          alt={petName}\n          className=\"pet-form__image-item\"\n        />\n\n        {!isDemo && (\n          <div className=\"pet-form__image-control\">\n            <OverlayTrigger placement=\"left\" overlay={controlTooltip('Delete')}>\n              <button\n                type=\"button\"\n                className=\"pet-form__image-control-btn pet-form__image-control-btn--delete\"\n                onClick={() => this.handleDelete(filename)}\n              >\n                <FontAwesomeIcon icon=\"trash\" />\n              </button>\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    ));\n  };\n\n  render() {\n    const { images } = this.props;\n\n    return (\n      <Form.Group\n        controlId=\"images\"\n        className=\"pet-form__group pet-form__image\"\n      >\n        <Form.Label className=\"pet-form__label\">Images</Form.Label>\n\n        <div className=\"pet-form__image-list\">\n          {images && images.length > 0 && this.createImages()}\n\n          {isDemo ? (\n            <Button className=\"pet-form__upload-btn disabled\">\n              <FontAwesomeIcon\n                icon=\"camera\"\n                className=\"pet-form__upload-btn-icon\"\n              />\n              <span className=\"pet-form__upload-btn-text\">\n                Upload image is disabled on demo\n              </span>\n            </Button>\n          ) : (\n            <label\n              htmlFor=\"image-add\"\n              className=\"pet-form__image-label pet-form__upload-btn\"\n            >\n              <input\n                type=\"file\"\n                id=\"image-add\"\n                className=\"pet-form__image-add\"\n                multiple\n                ref={this.fileInputRef}\n                onChange={this.handleAdd}\n              />\n              <FontAwesomeIcon\n                icon=\"camera\"\n                className=\"pet-form__image-label-icon pet-form__upload-btn-icon\"\n              />\n              <span className=\"pet-form__image-label-text pet-form__upload-btn-text\">\n                Add image\n              </span>\n            </label>\n          )}\n        </div>\n      </Form.Group>\n    );\n  }\n}\n\nexport default PetFormImageInput;\n","/* eslint-disable indent */\n\nimport React, { Component } from 'react';\nimport { Container, Form, Col, Button } from 'react-bootstrap';\nimport { Formik, Field } from 'formik';\n\nimport '../../css/pet-form.min.css';\n\nimport DataSource from '../store/DataSource';\nimport actionTypes from '../store/actionTypes';\nimport queries from '../store/graphQLQueries';\nimport mutations from '../store/graphQLMutations';\nimport PetFormImageInput from './PetFormImageInput';\n\nconst { REACT_APP_IS_DEMO } = process.env;\nconst isDemo = REACT_APP_IS_DEMO === 'true';\n\nconst dataSource = new DataSource();\n\n// ===== Input options. =====\n\nconst breeds = [\n  'Irish Terrier',\n  'Georgian Shepherd',\n  'Leonberger',\n  'Dogo Guatemalteco',\n  'Cretan Hound',\n];\nconst genders = [\n  {\n    label: 'Male',\n    id: 'male',\n    value: 'Male',\n  },\n  {\n    label: 'Female',\n    id: 'female',\n    value: 'Female',\n  },\n];\nconst ages = [\n  {\n    label: 'Puppy',\n    id: 'puppy',\n    value: 'Puppy',\n  },\n  {\n    label: 'Young',\n    id: 'young',\n    value: 'Young',\n  },\n  {\n    label: 'Mature',\n    id: 'mature',\n    value: 'Mature',\n  },\n];\nconst coatLengths = [\n  {\n    label: 'Short',\n    id: 'short',\n    value: 'Short',\n  },\n  {\n    label: 'Medium',\n    id: 'medium',\n    value: 'Medium',\n  },\n  {\n    label: 'Long',\n    id: 'long',\n    value: 'Long',\n  },\n];\nconst healths = [\n  {\n    label: 'Vaccinated',\n    id: 'vaccinated',\n    value: 'Vaccinated',\n  },\n  {\n    label: 'Spayed/Neutered',\n    id: 'spayed/neutered',\n    value: 'Spayed/Neutered',\n  },\n];\nconst preferHomes = [\n  {\n    label: 'Other dogs',\n    id: 'other-dogs',\n    value: 'Other dogs',\n  },\n  {\n    label: 'Other cats',\n    id: 'other-cats',\n    value: 'Other cats',\n  },\n  {\n    label: 'Children',\n    id: 'children',\n    value: 'Children',\n  },\n];\n\n// ====== Helpers. ======\n\nfunction createSelectOptions(data) {\n  return data.map((item) => (\n    <option key={item} value={item}>\n      {item}\n    </option>\n  ));\n}\n\nfunction createRadioOptions(groupLabel, name, data) {\n  const radios = data.map(({ label, id, value }) => (\n    <Field key={id} name={name}>\n      {({ field }) => (\n        <Form.Check\n          {...field}\n          type=\"radio\"\n          label={label}\n          id={`${name}-${id}`}\n          value={value}\n          className=\"pet-form___field pet-form__field--radio\"\n          defaultChecked={field.value === value}\n        />\n      )}\n    </Field>\n  ));\n\n  return (\n    <>\n      <Form.Label className=\"pet-form__label\">{groupLabel}</Form.Label>\n      {radios}\n    </>\n  );\n}\n\nfunction createCheckboxOptions(groupLabel, name, activeValues, data) {\n  const checkboxes = data.map(({ label, id, value }) => (\n    <Field key={id} name={name}>\n      {({ field }) => (\n        <Form.Check\n          {...field}\n          type=\"checkbox\"\n          label={label}\n          id={`${name}-${id}`}\n          value={value}\n          className=\"pet-form___field pet-form__field--checkbox\"\n          defaultChecked={activeValues.includes(value)}\n        />\n      )}\n    </Field>\n  ));\n\n  return (\n    <>\n      <Form.Label className=\"pet-form__label\">{groupLabel}</Form.Label>\n      {checkboxes}\n    </>\n  );\n}\n\nexport default class PetForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      status: '',\n      initialValues: {\n        name: '',\n        breed: '',\n        gender: 'Male',\n        age: 'Puppy',\n        coatLength: 'Short',\n        health: [],\n        preferHomeWith: [],\n        preferHomeWithout: [],\n        description: '',\n        images: [],\n      },\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { mode, id },\n      },\n    } = this.props;\n\n    if (mode === 'edit') {\n      const data = await dataSource.graphQLFetch(\n        queries[actionTypes.PET_DETAILS],\n        { _id: id },\n      );\n      if (data && data.pet) {\n        this.setState({ initialValues: data.pet, status: 'loaded' });\n      }\n    }\n\n    document.body.classList.add('page-pet-form');\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('page-pet-form');\n  }\n\n  handleSubmit = async (values) => {\n    if (isDemo) return undefined;\n\n    try {\n      const {\n        history,\n        match: {\n          params: { mode, id },\n        },\n      } = this.props;\n      const { author, ...petData } = values;\n\n      const query =\n        mode === 'new'\n          ? mutations[actionTypes.PET_CREATE]\n          : mutations[actionTypes.PET_UPDATE];\n      const vars =\n        mode === 'new'\n          ? {\n              pet: petData,\n            }\n          : {\n              _id: id,\n              changes: petData,\n            };\n\n      await dataSource.graphQLFetch(query, vars);\n\n      history.push('/user/pet');\n    } catch (error) {\n      console.error('PetForm handle submit error.', error.message);\n    }\n\n    return undefined;\n  };\n\n  handleCancel = () => {\n    const { history } = this.props;\n\n    history.push('/user/pet');\n  };\n\n  render() {\n    const {\n      match: {\n        params: { mode, id },\n      },\n    } = this.props;\n    const { status, initialValues } = this.state;\n    // Using key to force update Formik component.\n    // I use this because it won't re-render even with new initialValues.\n    const formikKey = status === 'loaded' ? `${id}-${status}` : id;\n    const breedOptions = createSelectOptions(breeds);\n\n    return (\n      <main className=\"main-container\">\n        <Container>\n          <h1 className=\"page-title\">New Pet Form</h1>\n\n          <Formik\n            key={mode === 'edit' ? formikKey : 'new'}\n            onSubmit={this.handleSubmit}\n            initialValues={initialValues}\n          >\n            {({ values, handleSubmit, setFieldValue }) => (\n              <Form noValidate onSubmit={handleSubmit} className=\"pet-form\">\n                <section className=\"pet-form__section pet-form__basic\">\n                  <h2 className=\"pet-form__section-title\">Basic Information</h2>\n\n                  <Form.Group\n                    controlId=\"name\"\n                    className=\"pet-form__group pet-form__name\"\n                  >\n                    <Form.Label className=\"pet-form__label\">Name</Form.Label>\n                    <Field name=\"name\">\n                      {({ field }) => (\n                        <Form.Control\n                          {...field}\n                          type=\"text\"\n                          className=\"pet-form___field pet-form__field--text\"\n                        />\n                      )}\n                    </Field>\n                  </Form.Group>\n\n                  <Form.Group\n                    controlId=\"breed\"\n                    className=\"pet-form__group pet-form__breed\"\n                  >\n                    <Form.Label className=\"pet-form__label\">Breed</Form.Label>\n                    <Field name=\"breed\">\n                      {({ field }) => (\n                        <Form.Control\n                          {...field}\n                          as=\"select\"\n                          className=\"pet-form___field pet-form__field--select\"\n                        >\n                          <option value=\"\">None</option>\n                          {breedOptions}\n                        </Form.Control>\n                      )}\n                    </Field>\n                  </Form.Group>\n\n                  <Form.Row>\n                    <Col xs=\"12\" sm=\"6\" md=\"3\">\n                      <Form.Group\n                        controlId=\"gender\"\n                        className=\"pet-form__group pet-form__gender\"\n                      >\n                        {createRadioOptions('Gender', 'gender', genders)}\n                      </Form.Group>\n                    </Col>\n\n                    <Col xs=\"12\" sm=\"6\" md=\"3\">\n                      <Form.Group\n                        controlId=\"age\"\n                        className=\"pet-form__group pet-form__age\"\n                      >\n                        {createRadioOptions('Age', 'age', ages)}\n                      </Form.Group>\n                    </Col>\n\n                    <Col xs=\"12\" sm=\"6\" md=\"3\">\n                      <Form.Group\n                        controlId=\"coat-length\"\n                        className=\"pet-form__group pet-form__coat-length\"\n                      >\n                        {createRadioOptions(\n                          'Coat length',\n                          'coatLength',\n                          coatLengths,\n                        )}\n                      </Form.Group>\n                    </Col>\n\n                    <Col xs=\"12\" sm=\"6\" md=\"3\">\n                      <Form.Group\n                        controlId=\"health\"\n                        className=\"pet-form__group pet-form__health\"\n                      >\n                        {createCheckboxOptions(\n                          'Health',\n                          'health',\n                          values.health,\n                          healths,\n                        )}\n                      </Form.Group>\n                    </Col>\n                  </Form.Row>\n\n                  <Form.Row>\n                    <Col xs=\"12\" sm=\"6\">\n                      <Form.Group\n                        controlId=\"prefer-home-with\"\n                        className=\"pet-form__group pet-form__prefer-home-with\"\n                      >\n                        {createCheckboxOptions(\n                          'Prefer in a home with',\n                          'preferHomeWith',\n                          values.preferHomeWith,\n                          preferHomes,\n                        )}\n                      </Form.Group>\n                    </Col>\n\n                    <Col xs=\"12\" sm=\"6\">\n                      <Form.Group\n                        controlId=\"prefer-home-without\"\n                        className=\"pet-form__group pet-form__prefer-home-without\"\n                      >\n                        {createCheckboxOptions(\n                          'Prefer in a home without',\n                          'preferHomeWithout',\n                          values.preferHomeWithout,\n                          preferHomes,\n                        )}\n                      </Form.Group>\n                    </Col>\n                  </Form.Row>\n\n                  <Form.Group\n                    controlId=\"description\"\n                    className=\"pet-form__group pet-form__description\"\n                  >\n                    <Form.Label className=\"pet-form__label\">\n                      Description\n                    </Form.Label>\n                    <Field name=\"description\">\n                      {({ field }) => (\n                        <Form.Control\n                          {...field}\n                          as=\"textarea\"\n                          className=\"pet-form___field pet-form__field--textarea\"\n                        />\n                      )}\n                    </Field>\n                  </Form.Group>\n\n                  <PetFormImageInput\n                    petName={values.name}\n                    images={values.images}\n                    setFieldValue={setFieldValue}\n                  />\n                </section>\n\n                <section className=\"pet-form__control\">\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    className=\"pet-form__control-btn pet-form__control-btn--create\"\n                    disabled={isDemo}\n                  >\n                    {mode === 'new' ? 'Create' : 'Edit'}\n                  </Button>\n\n                  <Button\n                    variant=\"primary\"\n                    type=\"button\"\n                    className=\"pet-form__control-btn pet-form__control-btn--cancel\"\n                    onClick={this.handleCancel}\n                  >\n                    Cancel\n                  </Button>\n                </section>\n              </Form>\n            )}\n          </Formik>\n        </Container>\n      </main>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport '../../css/user.min.css';\n\nimport UserPetList from './UserPetList';\nimport UserSetting from './UserSetting';\nimport PetForm from './PetForm';\n\nconst mapStateToProps = ({ isAuthenticated }) => ({\n  isAuthenticated,\n});\n\nclass UserSwitch extends Component {\n  componentDidMount() {\n    document.body.classList.add('page-user');\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('page-user');\n  }\n\n  render() {\n    const {\n      isAuthenticated,\n      match: { path },\n    } = this.props;\n\n    return (\n      <Switch>\n        {!isAuthenticated && <Redirect to=\"/login\" />}\n\n        <Route path={`${path}/pet/manage/:mode/:id?`} component={PetForm} />\n        <Route path={`${path}/pet/:page`} component={UserPetList} />\n        <Route path={`${path}/setting`} component={UserSetting} />\n\n        <Redirect exact from=\"/user\" to=\"/user/pet/1\" />\n        <Redirect exact from=\"/user/pet\" to=\"/user/pet/1\" />\n      </Switch>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(UserSwitch);\n","import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport '../css/login.min.css';\n\nimport LoginForm from './LoginForm';\nimport FormErrorMessage from './FormErrorMessage';\nimport withLogin from './withLogin';\nimport LoginSchema from './helpers/yup/LoginSchema';\n\nconst { REACT_APP_IS_DEMO } = process.env;\nconst isDemo = REACT_APP_IS_DEMO === 'true';\n\nconst initialValues = {\n  username: '',\n  password: '',\n};\n\nclass Login extends Component {\n  componentDidMount() {\n    document.body.classList.add('page-login');\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('page-login');\n  }\n\n  render() {\n    const {\n      error: { show, message },\n      handleFormSubmit,\n    } = this.props;\n\n    return (\n      <main className=\"main-container\">\n        <Container>\n          <Row>\n            <Col>\n              <div className=\"panel\">\n                <h1 className=\"panel__title\">Login to your account</h1>\n\n                {show && <FormErrorMessage message={message} />}\n\n                <Formik\n                  initialValues={initialValues}\n                  onSubmit={handleFormSubmit}\n                  validationSchema={LoginSchema}\n                >\n                  {({ handleSubmit, touched, errors }) => (\n                    <LoginForm\n                      handleSubmit={handleSubmit}\n                      touched={touched}\n                      errors={errors}\n                      className=\"panel__form\"\n                    />\n                  )}\n                </Formik>\n\n                {!isDemo && (\n                  <div className=\"panel__footer\">\n                    <p>\n                      Don&apos;t have an account?{' '}\n                      <Link to=\"/register\">Register.</Link>\n                    </p>\n                  </div>\n                )}\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n    );\n  }\n}\n\nexport default withLogin(Login);\n","import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport '../css/register.min.css';\n\nimport RegisterForm from './RegisterForm';\nimport FormErrorMessage from './FormErrorMessage';\nimport withRegister from './withRegister';\nimport RegisterSchema from './helpers/yup/RegisterSchema';\n\nconst initialValues = {\n  name: '',\n  username: '',\n  email: '',\n  password: '',\n  passwordRepeat: '',\n};\n\nclass Register extends Component {\n  componentDidMount() {\n    document.body.classList.add('page-register');\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('page-register');\n  }\n\n  render() {\n    const {\n      error: { show, message },\n      handleFormSubmit,\n    } = this.props;\n\n    return (\n      <main className=\"main-container\">\n        <Container>\n          <Row>\n            <Col>\n              <div className=\"panel\">\n                <h1 className=\"panel__title\">Create a new account</h1>\n\n                {show && <FormErrorMessage message={message} />}\n\n                <Formik\n                  initialValues={initialValues}\n                  onSubmit={handleFormSubmit}\n                  validationSchema={RegisterSchema}\n                >\n                  {({ handleSubmit, touched, errors }) => (\n                    <RegisterForm\n                      handleSubmit={handleSubmit}\n                      touched={touched}\n                      errors={errors}\n                      className=\"panel__form\"\n                    />\n                  )}\n                </Formik>\n\n                <div className=\"panel__footer\">\n                  <p>\n                    Already have an account? <Link to=\"/login\">Login.</Link>\n                  </p>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n    );\n  }\n}\n\nexport default withRegister(Register);\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faPhone,\n  faMapMarkerAlt,\n  faBars,\n  faTimes,\n  faFilter,\n  faSortAlphaDown,\n  faChevronLeft,\n  faChevronRight,\n  faPlus,\n  faEdit,\n  faTrash,\n  faCog,\n  faCamera,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons';\nimport './css/main.min.css';\n\nimport ScrollToTop from './components/ScrollToTop';\nimport MainNavbar from './components/MainNavbar';\nimport DemoAlert from './components/DemoAlert';\nimport Home from './components/Home';\nimport PetDetails from './components/PetDetails';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\nimport UserSwitch from './components/user/UserSwitch';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport actionCreator from './components/store/actionCreator';\nimport DataSource from './components/store/DataSource';\n\nconst { REACT_APP_IS_DEMO } = process.env;\nconst isDemo = REACT_APP_IS_DEMO === 'true';\n\nconst dataSource = new DataSource();\n\nconst mapDispatchToProps = {\n  setAuthenticate: actionCreator.setAuthenticate,\n};\n\n// Fontawesome global library build up.\nlibrary.add(\n  faPhone,\n  faMapMarkerAlt,\n  faBars,\n  faTimes,\n  faFilter,\n  faSortAlphaDown,\n  faChevronLeft,\n  faChevronRight,\n  faPlus,\n  faEdit,\n  faTrash,\n  faCog,\n  faCamera,\n  faEnvelope,\n);\n\nclass App extends Component {\n  async componentDidMount() {\n    const { setAuthenticate } = this.props;\n\n    const result = await dataSource.getData('/user');\n    if (result.success) {\n      setAuthenticate(true, result.user);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <ScrollToTop />\n\n          <MainNavbar />\n\n          {isDemo && <DemoAlert />}\n\n          <Switch>\n            <Route path=\"/home/:page\" component={Home} />\n            <Route path=\"/pet/:id\" component={PetDetails} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route path=\"/login\" component={Login} />\n\n            {!isDemo && <Route path=\"/register\" component={Register} />}\n\n            <Route path=\"/user\" component={UserSwitch} />\n\n            <Redirect from=\"/home\" to=\"/home/1\" />\n            <Redirect to=\"/home/1\" />\n          </Switch>\n\n          <Footer />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","const initialState = {\n  petList: {\n    page: 0,\n    pages: 0,\n    total: 0,\n    docs: [],\n  },\n  petDetails: {},\n  userPetList: {\n    page: 0,\n    pages: 0,\n    total: 0,\n    docs: [],\n  },\n  user: {\n    username: '',\n    email: '',\n    name: '',\n    phone: '',\n    address: '',\n  },\n  isAuthenticated: false,\n};\n\nexport default initialState;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable consistent-return */\nimport produce from 'immer';\n\nimport actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nconst reducer = produce((draft, action) => {\n  switch (action.type) {\n    case actionTypes.PET_LIST:\n      draft.petList = action.payload.petList;\n      break;\n\n    case actionTypes.PET_DETAILS:\n      draft.petDetails = action.payload.pet;\n      break;\n\n    case actionTypes.USER_PET_LIST:\n      draft.userPetList = action.payload.userPetList;\n      break;\n\n    case actionTypes.USER_INFO_UPDATE:\n      draft.user = { ...action.payload.userInfoUpdate };\n      break;\n\n    // Use this if you want to manually filter user pet list.\n    // Other option will be refetching the data and relying on database as the ~\n    // ~ source of truth.\n    case actionTypes.PET_DELETE:\n      // \"data\" contains Boolean value of whether there is such pet with given id.\n      if (!action.payload.data) {\n        throw new Error('Pet is not found.');\n      }\n      draft.userPetList.docs = draft.userPetList.docs.filter(\n        (pet) => pet._id !== action.payload._id,\n      );\n      break;\n\n    case actionTypes.SET_AUTHENTICATE:\n      draft.isAuthenticated = action.payload.status;\n      draft.user = action.payload.user;\n      break;\n\n    default:\n      return undefined;\n  }\n}, initialState);\n\nexport default reducer;\n","/* eslint-disable no-underscore-dangle */\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\n\nimport reducer from './reducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(promiseMiddleware)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './components/store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}